{"version":3,"sources":["components/contexts/MailContext.js","components/FrameworkList.js","components/Keycode.js","components/LevelC.js","components/LevelB.js","components/LevelA.js","components/Like.js","components/Login.js","components/PostList.js","components/Pot.js","App.js","reportWebVitals.js","index.js"],"names":["MailContext","createContext","MailContextProvider","props","useState","id","title","content","messages","setMessages","Provider","value","deleteMessage","message","filter","msg","children","FrameworkList","name","frameworks","setFrameworks","frameworkName","setFrameworkName","onSubmit","e","preventDefault","Date","now","type","onChange","target","length","map","framework","KeyCode","keyCode","setKeyCode","key","setKey","getKeycode","console","log","useEffect","document","addEventListener","removeEventListener","className","LevelC","useContext","onClick","LevelB","LevelA","Like","nbIfLikes","setNbOfLikes","Login","login","setLogin","messageLogin","setMessageLogin","loginRef","useRef","current","focus","ref","onKeyUp","placeholder","PostList","posts","setPosts","axios","get","then","result","data","counter","setCounter","counterDisabled","setCounterDisabled","post","disabled","Pot","firstname","setFirstname","lastname","setLastname","amount","setAmount","users","setUsers","firstnameRef","showDetails","setShowDetails","total","setTotal","reduce","acc","userSingularPlurial","newUser","Number","htmlFor","user","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b087407b.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const MailContext = createContext();\r\n\r\nconst MailContextProvider = (props) => {\r\n  const [messages, setMessages] = useState([\r\n    { id: 1, title: \"Birthday party\", content: \"Come and bring a bottle\"},\r\n    { id: 2, title: \"This is a spam\", content: \"We want to sell you something\"}\r\n  ]);\r\n\r\n  const deleteMessage = (message) => {\r\n    // si l'id du message couramment itéré \r\n    // est différent de l'id passé en paramètre\r\n    // on garde ce message\r\n    setMessages(messages.filter(msg => msg.id !== message.id));\r\n  };\r\n\r\n  return (\r\n    // on passe maintenant à value un objet\r\n    // {messages : messages, deleteMessage : deleteMessage}\r\n    <MailContext.Provider value={{ messages, deleteMessage}}>\r\n      {props.children}\r\n    </MailContext.Provider>\r\n  );\r\n}\r\n \r\nexport default MailContextProvider;","import React, { useState } from 'react';\r\nconst FrameworkList = () => {\r\n    const [frameworks, setFrameworks] = useState([\r\n        {\r\n            id:1,\r\n            name:\"Symfony\"\r\n        },\r\n        {\r\n            id:2,\r\n            name:\"React\"\r\n        },\r\n        {\r\n            id:3,\r\n            name:\"Angular\"\r\n        }\r\n    ]);\r\n\r\n    // un autre morceau d'état pour gérer la valeur du champ text\r\n    const [frameworkName, setFrameworkName] = useState(\"\");\r\n\r\n    const addFramework = (e) =>{\r\n        e.preventDefault();\r\n        setFrameworks([ ...frameworks, {\r\n            id:Date.now(),\r\n            name:frameworkName\r\n        }])\r\n\r\n\r\n    }\r\n    return ( \r\n        <div>\r\n            <form onSubmit={addFramework}>\r\n                <input type=\"text\" name=\"frameworkName\"\r\n                // comme toujours avec react\r\n                // on a une value et un onChange\r\n                value={frameworkName} \r\n                onChange={ e =>setFrameworkName(e.target.value)} />\r\n                <button type=\"submit\">add</button>\r\n            </form>\r\n\r\n            <div>\r\n                {\r\n                    (frameworks.length===0)?(\r\n                        <h2>No framweworks</h2>\r\n                    ):(\r\n                        <ul>{\r\n                            frameworks.map(framework=> <li key={frameworks.id}>{framework.name}</li>)   \r\n                        }\r\n\r\n                        </ul>\r\n                        )\r\n                            \r\n                    \r\n                }\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default FrameworkList;","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst KeyCode = () => {\r\n    // on a besoin de stocker le keycode qu'on devra afficher\r\n    const [keyCode, setKeyCode] = useState('');\r\n    // pour garder une trace de la key pressée\r\n    const [key, setKey] = useState('');\r\n    const getKeycode = (e)=>{\r\n        console.log(\"ma clée\", e);\r\n        setKeyCode(e.keyCode);\r\n        setKey(e.key);\r\n    }\r\n    // on veut ajouter un eventlistener sur tout le document\r\n    useEffect(() => {\r\n        document.addEventListener('keyup', getKeycode);\r\n    return()=> document.removeEventListener('keyup');\r\n// utilisation d'un tableau vide en deuxième argument\r\n// qui équivault à ne s'abonner à l'éventlistner uniquement lorsque le component vient d'être monté\r\n    }, []);\r\n    return (\r\n        <>\r\n          <input type=\"text\" />\r\n          {\r\n            key.length === 0 ? (\r\n              <div>press any keyboard key</div>\r\n            ) :(\r\n              <div>Key is \"{key}\"</div>\r\n            )\r\n          }\r\n          <div className=\"key-code\">{keyCode}</div>\r\n        </>\r\n      );\r\n    }\r\n    \r\n    export default KeyCode;","import React, { useContext } from 'react';\r\nimport { MailContext } from './contexts/MailContext';\r\n\r\nconst LevelC = () => {\r\n  const {messages, deleteMessage} = useContext(MailContext);\r\n  return (\r\n    <div className=\"level-c\">\r\n      <h1>Level C</h1>\r\n      <div>\r\n        Level A directly passed me {messages.length} messages.\r\n        <hr/>\r\n        {\r\n          messages.length > 0 ? (\r\n            <ul>\r\n              { messages.map(msg => <li key={msg.id}>{msg.title} <button onClick={() => deleteMessage(msg)}>del</button></li>)}\r\n            </ul>\r\n          ) : (\r\n            <h3>no message</h3>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LevelC;","import React from 'react';\r\nimport LevelC from './LevelC';\r\n\r\n\r\nconst LevelB = () => {\r\n    return ( \r\n        <div className=\"level-b\">\r\n            <h2>Level B</h2>\r\n            <p>Utilise le component : </p>\r\n            <LevelC/>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default LevelB;","import React from 'react';\r\nimport LevelB from './LevelB';\r\n\r\nconst LevelA = () => {\r\n    return ( \r\n        <div className=\"level-a\">\r\n            <h2 >Level A</h2>\r\n            <p>Utilise le component : </p>\r\n            <LevelB/>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default LevelA;","import React, { useState } from 'react';\r\n// simple fonction qui retourne du jsx\r\nconst Like = () => {\r\n    // pour gérer l'état\r\n    const [nbIfLikes, setNbOfLikes] = useState(0);\r\n    return ( \r\n        <div className='row'>\r\n            {nbIfLikes}\r\n            <button onClick={()=>setNbOfLikes(nbIfLikes+1)}>Like</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Like;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst Login = () => {\r\n    // qui permettra d'enregistrer un login, donc un userRef\r\n    const [login, setLogin] = useState('');\r\n    // pour l'affichage du message quand l'utilisateur aura appuyé sur la touche enter\r\n    const [messageLogin, setMessageLogin] = useState('');\r\n    // constante qui retournera un objet qui a une propriété current\r\n    const loginRef = useRef();\r\n    // qui nous retourne quand le component est monté\r\n    // ce à quoi correspont loginRef\r\n    useEffect(() => {\r\n        console.log(loginRef);\r\n        // on a le contrôle sur un élément du DOM programmatiquement !\r\n        loginRef.current.focus();\r\n    }, []);\r\n    const handleChange = (e) => {\r\n        setLogin(e.target.value);\r\n    }\r\n    const handleKeyUp = (e) => {\r\n        if (e.keyCode === 13) {\r\n            setMessageLogin(`Trying to login as ${login}`)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <input type=\"text\" ref={loginRef} value={login} onChange={handleChange} onKeyUp={handleKeyUp} placeholder=\"your login\" />\r\n            {/* puisqu'on a un morceau d'état chargé d'afficher notre message, on peut l'utiliser ici pour recracher notre message */}\r\n            {messageLogin}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst PostList = () => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    // grâce au second évènement le useEffect ne sera utilisé qu'une fois\r\n    // pour éviter les boucles infinies\r\n    useEffect(() => {\r\n        // requête ajax à l'aide d'axios\r\n        axios.get('https://jsonplaceholder.typicode.com/posts')\r\n            .then(result => {\r\n                setPosts(result.data);\r\n            })\r\n    }, []);\r\n// pour illustrer l'utilisation de  plusieurs useEffect() par fonctionnalité\r\nconst [counter, setCounter] = useState(0);\r\nconst [counterDisabled, setCounterDisabled] = useState(false);\r\nuseEffect(() => {\r\n    // fonction qui sera exécutée chaque fois que la valeur de compteur est modifiée\r\n    // puisque counter, rentré en second paramètre est une dépendance\r\n    if (counter ===3){\r\n        setCounterDisabled(true);\r\n    }\r\n}, [counter]);\r\n\r\nconst resetCounter = ()=>{\r\n    setCounter(0);\r\n    setCounterDisabled(false);\r\n}\r\n\r\n    return (\r\n        <>\r\n            <h2>Liste des posts</h2>\r\n            {\r\n                (posts.length > 0)?(\r\n                    posts.map(post => <div key={post.id}> {post.title}</div>)\r\n                ):\r\n                (\r\n                    <h3>Loading</h3>\r\n                    )\r\n            }\r\n\r\n            <hr />\r\n            <h3>Compteur : {counter}</h3>\r\n            <button onClick={(e)=>setCounter(counter+1)} disabled={counterDisabled}>incrémenter le compteur</button> \r\n            <button onClick={resetCounter}>Reset</button>      \r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PostList;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\n\r\n\r\n\r\n\r\nconst Pot = () => {\r\n    const [firstname, setFirstname] = useState('');\r\n    const [lastname, setLastname] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    // pour garder une trace de tous les utilisateurs\r\n    const [users, setUsers] = useState([]);\r\n    // quand notre component sera monté on veut pouvoir mettre le focus sur firstname\r\n    // donc utiliser une référence à firstname qui est un objet qui a pour unique propriété current\r\n    const firstnameRef = useRef();\r\n    // référence au \r\n    useEffect(() => {\r\n        console.log(firstnameRef);\r\n        firstnameRef.current.focus();\r\n    }, []);\r\n    const handleFirstname = e => {\r\n        setFirstname(e.target.value);\r\n    }\r\n\r\n    const handleLastname = e => {\r\n        setLastname(e.target.value);\r\n    }\r\n    const handleAmount = e => {\r\n        setAmount(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            id: Date.now(),\r\n            // firstname : firstname,\r\n            // lastname : lastname,\r\n            firstname,\r\n            lastname,\r\n            amount: Number(amount)\r\n        }\r\n        setUsers([newUser, ...users]);\r\n        // pour le reset\r\n        setFirstname('');\r\n        setLastname('');\r\n        setAmount(0.0);\r\n        firstnameRef.current.focus();\r\n    }\r\n    // pour l'état de la case à cocher qui permet d'afficher le total\r\n    const [showDetails, setShowDetails] = useState(false);\r\n    const [total, setTotal] = useState(0);\r\n    // on veut un useEffect qui aura  pour dépendance users\r\n    useEffect(() => {\r\n        // on utilise la méthode reduce qui est dans le  prototype de array\r\n        const total = users.reduce(\r\n            (acc,current)=> acc = acc+current.amount,0)\r\n        setTotal(total);\r\n    }, [users]);\r\n    const userSingularPlurial = users.length > 1? (\"user\") : (\"user\");\r\n    const toggleDetails = e => setShowDetails(!showDetails);\r\n    return (\r\n        <>\r\n            <h2>Votes</h2>\r\n            <div>Total : {total} € ( de {users.length} {userSingularPlurial})</div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" value={firstname} ref={firstnameRef} placeholder=\"votre prénom\" onChange={handleFirstname} />\r\n                <input type=\"text\" value={lastname} placeholder=\"votre nom\" onChange={handleLastname} />\r\n                <input type=\"text\" value={amount} placeholder=\"montant ajouté\" onChange={handleAmount} />\r\n                <button type=\"submit\">Valider</button>\r\n            </form>\r\n            \r\n            <label htmlFor=\"details\">\r\n                <input type=\"checkbox\" name=\"details\" onChange={toggleDetails} />\r\n                Voir les détails\r\n            </label>\r\n\r\n            {users.length > 0 ? (\r\n                users.map(\r\n                    // user => <div key={user.id}>{user.firstname} added {user.amount}</div>\r\n                    user => showDetails ? (<div key={user.id}>{user.firstname} added {user.amount}</div>)\r\n                    :(<div key={user.id}>{user.firstname} a participé</div>)\r\n                )\r\n            ) : (<h3>\r\n                Aucun participant n'a pour le moment ajouté de montant au pot de départ\r\n            </h3>\r\n\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Pot;","import './App.css';\nimport MailContextProvider from './components/contexts/MailContext';\nimport FrameworkList from './components/FrameworkList';\nimport KeyCode from './components/Keycode';\nimport LevelA from './components/LevelA';\nimport Like from './components/Like';\nimport Login from './components/Login';\nimport PostList from './components/PostList';\nimport Pot from './components/Pot';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main className=\"App-header\">\n        <h1>\n          Hooks Practice\n        </h1>\n        <p>premier exemple - useState</p>\n        <Like />\n        <p>deuxième exemple - useState</p>\n        <FrameworkList />\n        <p>3ème exemple -  useEffect, useState</p>\n        <PostList />\n        <p>4ème exemple : la création de components imbriqués</p>\n        <MailContextProvider>\n          <LevelA />\n        </MailContextProvider>\n        <p>5ème exemple : l'écoute d'événements clavier</p>\n        <KeyCode />\n        <p>6ème exemple : gérer le focus à l'aide de useRef():<br/>application de useEffect, useRef, useState </p>\n        <Login />\n        <p>7ème exemple : Application de côtisation pour un pot de départ</p>\n        <Pot />\n      </main>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}